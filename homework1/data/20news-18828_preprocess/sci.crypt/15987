gregonuferengsuncom greg onufer subject let build software cryptophone internet c622a17t6demoncouk graham toal gtoalgtoalcom write article 1regq0innn7ugapcaltechedu halccocaltechedu hal finney write tried thi code yesterday sparcstation elc take 300 second compres 22 second worth speech thi mean need optimized factor 10 usable even halfduplex mode ouch thank trying following program quick hack created month ago determine whether sun sparcstation ipc could perform realtime fullduplex encrypted audio resulting datum rate sustainable today modem thi test program read linearlyencoded audio audio device compress gsm 0610 compress frame 160 13bit sample recorded 8khz 260 bit resulting 50 hz frame rate encrypt de reverse proces send reconstructed audio back audio device compressed encrypted audio stream 13 kbit sparcstation ipc exactly fast machine day certainly slower elc would barely sustain thi activity audio underrun would occcur speech wa intelligible ran realtime proces get best result remember though thi program quick hack performance certainly improved audio compression routine ftpd tubcstuberlinde believe look gsm toast used eric young de implementation longer know got cheersgreg cut test program see much cpu take secure digital audio written g onufer gregcheersbungicom written sun ipc running solari 22 sun isdn sbu card speakerbox include stdlibh include unistdh include fcntlh include stdioh include systypesh include sysaudioioh include stroptsh include gsmh include desh booleant svsaudioinitint fd audioinfot previnfo audioinfot info previnfo null ioctlfd audiogetinfo previnfo 0 perroraudiogetinfo return bfalse audioinitinfoinfo inforecordpause btrue infoplaypause btrue infoplaysamplerate 8000 infoplayencoding audioencodinglinear infoplaychannel 1 infoplayprecision 16 inforecordsamplerate 8000 inforecordencoding audioencodinglinear inforecordchannel 1 inforecordprecision 16 inforecordbuffersize 320 4 ioctlfd audiosetinfo info 0 perroraudiosetinfo return bfalse ioctlfd iflush flushrw 0 perroriflush return bfalse audioinitinfoinfo inforecordpause bfalse infoplaypause bfalse ioctlfd audiosetinfo info 0 perroraudiosetinfo return bfalse return btrue booleant svsinint ifd gsm handle gsmbyte buf gsmsignal sample160 readifd sample sizeof sample sizeof sample fprintfstderr svsin short readn return bfalse gsmencodehandle sample buf return btrue booleant svsoutint ofd gsm handle gsmbyte buf gsmsignal sample160 gsmdecodehandle buf sample 0 fprintfstderr svsout gsmdecode failedn return bfalse writeofd sample sizeof sample sizeof sample fprintfstderr svsout short writen return bfalse return btrue main gsm handle gsmframe frame int audiofd int option descblock key ivecin ivecout deskeyschedule ksin ksout descblock cbufin4 cbufout4 cbufbuf4 audiofd opendevaudio ordwr audiofd 0 perroropen exit4 initialize gsm compression code handle gsmcreate null fprintfstderr sv gsmcreate failedn exit4 option btrue gsmoptionhandle gsmoptfast option 0 fprintfstderr sv gsmoption fast failedn exit4 initialize de code desrandomkeykey dessetkeykey ksin 0 fprintfstderr sv dessetkey failedn exit4 dessetkeykey ksout 0 fprintfstderr sv dessetkey failedn exit4 memsetivecin 0 sizeof ivecin memsetivecout 0 sizeof ivecout open audio device configure svsaudioinitaudiofd null exit3 get 160 sample 16bit linear 8000hz convert 33 byte frame svsinaudiofd handle frame exit1 encryptdecrypt block descbcencryptframe cbufout long32 ksin ivecin desencrypt descbcencryptcbufout cbufbuf long32 ksout ivecout desdecrypt memmoveframe cbufbuf 32 0 memcmpcbufin cbufbuf 32 0 fprintfstderr sv memcmp failedn exit4 endif take 33 byte frame convert 160 sample play svsoutaudiofd handle frame exit2 gsmdestroyhandle cut