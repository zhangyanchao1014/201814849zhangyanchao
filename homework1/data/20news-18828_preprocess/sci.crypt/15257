betsbicom bennett todd salomon brother inc ny subject source random bit unix workstation ymy application encrypt realtime clock value secret key well almost solve problem willing type second password secret key whenever logged could work however im trying create solution anyone use installed effortles start nonsolution using xhost1 control acces ive got religeou problem storing secret key multiuser computer good discussion cryptographically good random number generator check draftietfsecurityrandomness00txt internet draft available ymy local friendly internet draft repository thank pointer wa good reading liked idea using several unrelated source strong mixing function however unles missed something source suggested aside hardware rng seem available unguessable intruder unix freshbooted io buffer related network traffic believe solution basically use strategy without requiring reach kernel reasonably source randomnes output cryptographic hash function eg md5 fed large amount moreorles random datum example running md5 devmem slow random enough source random bit bound 128 bit entropy ten hundred megabyte datum modern workstation memory fair amount system timer io buffer etc heard thi solution sounded good heard folk experiencing time 3060 second run thi reasonablyconfigured workstation im willing add much delay someone login proces approach etherfindcompres skip 10k take second two run im considering writing beall endall solution launch md5 simultaneously try suck bit net net sitting idle cant get 10k compression md5 finish use md5 thi way could guaranteed good bit deterministic upper bound login time still common case login take couple extra second bennett betsbicom