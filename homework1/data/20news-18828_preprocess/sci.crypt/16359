ggrkoondaaccicomau greg rose subject authentication onetimepad wa advanced one time pad article 1s1dbminnehbelang05acslabumbcedu olsonumbcedu bryan olson cmsc g write onetimepad yeild ideal security ha wellknown flaw authentication suppose use random bit stream pad exclusiveor encryption operation adversary know plaintext message change message work alouse sending bob plaintext p key stream alouse compute ciphertext c xor p send bob eve know plainext p want message appear p eve intercept c compute c c xor p xor p xor p eve send c bob bob decrypt c computing cxor p thu receiving false message wa substituted eve firstly aside agree weaknes exist lot trouble believing represent difficulty real life given 1 purpose onetime pad give unbreakable security expense key distribution etc imply client really want level security 2 person want keep p secret find hard believe eve might happen copy p lying around aware argument apply eve knowing even small part message eve must know exactly byte c known susequence start result garbled find thi least surprising back question resource use onetimepad transmission would also append message authentication code message using next bit onetimepad key perhap ymy original question basically asked whether wa way authenticate message degree security pad provided dont know answer however would propose following discussion alouse bob arbitrary number secret random bit share eve doesnt know find effectively knowing p corresponding c fact correspond cause problem message authentication code wa created using onetimepad operation eve could know part mac affected part input would unable forge mac correspond required nonlinear combiner part message nonlinear simply xoring subtracting whatever doesnt exactly effect end encrypted message c alouse append nbit mac computed follow s2 mean next full chunk one time pad 1 compute c2 p xor s2 pad nbit boundary 2 break c2 nbit chunk 3 set mac 0 initialisation vector 4 chunk sequentially set mac mac nlop c2i end thi proces mac message authentication code bob verify mac obviou manner recover plaintext p use hi pad reproduce mac manner nlop nonlinear operator rub simplest nonlinear operator think sbox fixed even published permutation nbit integer indexable table called sbox use x nlop x xor sboxy practically speaking think thi solf ymy problem eve never see intermediate output c2 hence cant deduce s2 perform valid substitution also practically speaking want mac fairly large say 32 bit might want 4 gigabyte say sbox might work 4 bytesized sbox think irrelevant detail discussion hand first point error give pointer literature greg rose australian computing communication institute ggraccicomau 61 18 174 842 use standard phrase hijacked may inadvisable caa