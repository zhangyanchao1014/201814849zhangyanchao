peter subject frequently asked question faq archivename version id 128 x toolkit intrinsic faq monthly posting thi article contain answer frequently asked question faq compwindowsx x toolkit intrinsic submit question preferably answer send email many faq including thi one available archive site rtfmmitedu directory name faq archived appear archivename line top article thi faq archived code fragment public domain content 0 xt 1 software version 2 related faq 3 application core dump use 4 use different visual default 5 visual application use 6 shell widget visual 7 visual depth colormap shell 8 ive done still get error 9 doesnt widget get destroyed call 10 exit still execute 11 resize shell widget 12 cant handle file 13 good book magazine xt 14 widget available 15 alternative intrinsic 16 pa value 17 write resource converter 18 open multiple display 19 changed r3 r4 r5 20 resource loaded 21 order callback executed 22 know widget visible 23 widget xt ie 24 use etc 25 debug xt application 26 dont work 27 implement drag drop 0 xt xt intrinsic implement object oriented interface c code allow useful graphical component created included thi class provide base functionality object core composite constraint shell etc term xt intrinsic used however used precisely mean specific library x window system particular include athena motif olit widget set without widget intrinsic especially useful widget refer user interface created vium xt precise use object core clas used refer anything object clas although accurately called widget gadget xlib c interface x11 protocol one layer xt intrinsic typically widget use relatively xlib function xt provide service although understanding xlib help problem 1 software version following latest version xt based software software version released next expected x11r4 patch 18 none x11r5 patch 21 athena widget see x11r5 motif 121 olit 25 x11r4 none x11r5 none 34 2 related faq david b lewi maintain faq x posted monthly compwindowsx located export r e post faq list open look compwindowsx jan post faq list motif peter post faq list export 3 application core dump use brief xlib xt widget set mutual critical section interrupt handler likely leave one library inconsistent state appropriate flag yet set pointer middle list etc note ansi c standard point behavior signal handler undefined signal handler call function signal thi problem specific xlib xt specification mention function may called safely may assumed function called xlib xt function safe way deal signal set flag interrupt handler thi flag later need checked either work procedure timeout callback incorrect add either interrupt handler another note dangerou add work procedure never finish thi effectively work procedure previously added never called another option open pipe tell event loop read end using signal handler write byte write end pipe signal however thi could ymy proces pipe fill dont intrinsic deal thi problem primarily supposed portable layer hardware operating system good enough reason dont think note article x journal 14 example oreilly volume 6 error 4 use different visual default thi require complicated answer window ha three thing visual specific visual colormap border pixmap widget colormap resource shell widget visual resource another question deal shell visual default value resource exactly say shell widget get one three resource properly set error occur window created properly set value depend visual used get thi work two part answer first want application start particular visual second want particular shell within application start different visual second actually easier basic information need available first little harder youll need much toolkit order determine needed information sample code start application using something default visual compile cc g visual run visual geometry depth 24 visual blue yellow need move mouse get particular visual colormap install include include include visual visual int depth option resource visual visual visual visual null depth depth int depth null visual visual null depth depth null int main argv int char argv app application context widget top toplevel widget display display char saved argument vector int saved argument count colormap colormap created colormap find visual returned list visual int count number match 1 arg cardinal char name test char clas test save command line argument char char char argv char char following create toplevel widget retrieve appropriate visual resource 0 top app clas argv string null arg top 0 top option resource resource arg 0 top create appropriate colormap could use default colormap based clas visual could examine property find right colormap could sort thing colormap top colormap find information visual count count 0 top create real toplevel widget top char null clas arg display application loop handling event top app return 0 5 visual application use thi point argued one opinion way application know appropriate visual ha specified user disagree thi ymy application probably fall category alway using default visual hardware specific expect particular visual 24bit truecolor extension application run isolation depending way server allocate resource may alway want ymy application run truecolor mode going application may upset choose run instead monochrome example low end color sun server many different possible visual monochrome 256 entry colormap static gray static color truecolor sgi offer plu 12 bit truecolor 24 bit truecolor plane 6 shell widget visual thi strictly convention make possible arbitrary widget know visual use found looking shell widget ancestor obtaining visual shell widget visual resource must realize method use visual call also make thi resource obtained widget find reasonable value probably 7 visual depth colormap shell default value resource set thi interpreted default visual screen widget ha parent ie root ymy widget tree parent widget null shell copy colormap depth parent use visual 8 ive done still get error resource converter cache reference thi wa especially true earlier version motif 9 doesnt widget get destroyed call see section 28 xt specification eventually get destroyed immediately intrinsic destroy widget proces first child flag set indicate destroyed put list widget destroyed thi way pending x event reference widget cleaned memory actually second phase performed callback event handler action completed checking next x event thi point list widget memory actually among thing widget may destroyed intrinsic determine reference widget list phase 2 destruction occur immediately also event loop used widget placed destroy list entering inner event loop destroyed returning outer event loop 10 exit still execute problem simple entirely reasonable approach application used calling exit directly widget may chance clean external state open socket temporary file allocated x resource etc thi code simplicity reason assume single toplevel widget widget gw widget gw widget find toplevel widget top top gw top top top empty return top void gw widget gw widget datum app specified widget specific datum widget toplevel toplevel gw toplevel make disappear quickly toplevel exit 0 one see code exit immediately destroying toplevel widget trouble phase 2 destruction may never occur thi work widget application work widget external state might think since work alway work remember part reason object oriented approach used one ignorant implementation detail widget mean widget may change someday require external state cleaned destroy callback one alternative modify set global flag test flag private event loop however private event loop upon tend encourage difficult maintain practice try following code instead include widget widget gw endif endif void widget gw endif widget gw widget gw widget find toplevel widget top top gw top top top empty return top void gw widget gw widget datum app specified widget specific datum widget toplevel toplevel gw toplevel make disappear quickly toplevel gw null exit 0 add work procedure get called application next idle happen event processed destroy callback executed 11 resize shell widget realized one doesnt resize shell widget proper thing resize currently managed child shell widget using geometry change shell ask window manager may may allow request however shell must resource set true otherwise even ask window manager grant request shell resize change position shell use shell child within limit window manager granted 12 cant handle file however unix semantic io ready file fit people model unix term file ready reading whenever read call would block ignoring setting optional flag indicate block thi work expected terminal socket pipe file read alway return return indicate eof ie datum result code intrinsic alway call input handler alway think something read select system call based poll system call get around thi unix system best approach use another proces check available input file use pipe connect application thi proces pa file pipe suitable program system tail f filename select system completely reliable particular ibm aix 31 thi one would work several thousand time stop event thi seemed result race condition kernel ibm claim fix thi doesnt work ultrix possibly pipe implemented socket wasnt completely broken although writing side wrote 512 byte block reading side received broken wa put pipe byte time waste lot time reading small block get detecting situation select ignore pipe 10 given whole block note description used unix terminology read file pipe etc thi dependent area may identical system however intrinsic designer felt wa common enough operation included part toolkit didnt also deal signal thi point dont know 13 good book magazine xt favorite definitive reference perspective offer reasonable introduction also go full detail intrinsic started using wa already familiar xt concept behind may may find useful ive alway found accurate complete mean 1000 page paul j ralph r x window system toolkit complete programmer guide specification digital pres 1990 isbn order number isbn also available dec direct book commonly novice young doug x window system application programming xt motif version hall 1989 isbn isbn course oreilly ha entire series manual x xt oreilly ordering particular volume 5 xt reference done manual page style 3rd edition go far beyond mit manual page im finding useful particular index reference manual page help great deal related information read two x resource x journal two dealing specifically x x resource published quarterly oreilly one issue mit x consortium technical conference proceeding advertising ive found informative pretty good depth order call email editorial matter email table content posted tex form ascius form x journal trade rag lot advertising article informative oriented toward le technical audience read see going expectation learning great deal remember represent fairly small percentage person also pretty good collection person advisory board call 908 14 widget available three popular widget set athena set provided x11 thi sufficient purpose ugly side recently 3d look available ftp motif available license fee commonly shipped many workstation vendor platform almost everyone sun look good work well personally think poorly implemented olit open look intrinsic toolkit set widget implementing sun open look specification developed att ive never used cant comment quality ive heard rumour pain actually get addition following collection widget also available library widget sale graphical software technology include bar graph bar graph line graph chart xy plot help datum entry form widget ive never seen cant comment free widget foundation attempting collect set freely available widget included pixmap editor current set widget obtained vium anonymou ftp machine file cornell university widget gene one early widget set released provide nice appearance button ha mini command language probably widely used x sony widget set thi wa around r3 day seemed disappear looked like promise hp widget motif originally written r3 exist diff get work r4 r5 pretty good widget set ha le died thi wa xray toolkit wa originally implemented apparently provided much experience designer xt widget set im working still primitive give try following specialized widget also available implement layout widget support motif widget child part plot athena plotting widget athena widget contact 15 alternative intrinsic name language vendor xview c sun c interview c stanford c however much like c skill designing implementing intrinsic hopefully alternative develop next 35 year use object oriented language keep ymy eye open expect change time language c start gaining acceptance 16 pa value first going wrong structure arg essentially string name long value arg code arg arg arg name 32 expand arg arg name 32 see normal c type conversion get integer 3 instead floating point value 32 value copied widget resource bit pattern different required floating point value get around thi following macro athena widget document previou suggestion define n n else ld n ld 17 write resource converter courtesy rich following discussion resource converter assume r4 r5 intrinsic resource converter changed r3 r4 allow caching converted value several main type resource converter string datum type datum type string datum type datum type string datum type usually string datum type converter ha fixed set string converted datum type value thi often used map name value name value true 1 false 0 thi case string datum type converter need compare resource value list fixed string thi readily accomplished use mechanism resource manager resource value turned unique representation string fit single word resource compared fixed string representing value many string converter many converter small number string global routine might used turn resource string way first time one converter used string turned held static variable use next one converter ius datum type string thi type converter slightly easier string datum type converter since use isnt necessary instead datum type value simply converted string value probably use datum type string converter useful application wish convert internal datum type value string write valid resource specification file thi mechanism used provide application state file thi used restore program known state vium usual x resource database mechanism taking trouble write string datum type converter isnt much extra effort write datum type string converter writing time help ensure consistent iius datum type datum type thi type converter used convert existing datum type value another datum type instance x pixel value converted rgb datum type contain separate field red green blue type signature resource converter follow cardinal display arg cardinal converter invoked argument point source x resource manager value argument point destination x resource manager value argument pointer datum specified converter registered arg argument allow extra information passed converter invoked instance pixel rgb structure converter discussed would need colormap visual argument pixel obtain rgb value corresponding pixel care must taken argument ha following type definition specify size location converted value int size converter invoked addres may point location given size converted value location null former case converter ensure size destination area large enough handle converted value destination area large enough converter set size amount space needed return false caller ensure enough space allocated converter size large enough converter simply copy converted value space given return true location null converter assign location addres static variable containing converted value return true writing group converter thi code often repeated become convenient define macro define type return false else type else return true define return false else return true inside converter good idea perform little safety checking arg argument ensure ymy converter called properly written ymy converter need register intrinsic intrinsic invoke resource converter creating widget resource value resource database register converter single application context use void converter arg cache context string string converter arg cardinal cache register converter application context use void converter arg cache string string converter arg cardinal cache r3 intrinsic routine whenever possible newer routine used converter registered intrinsic cache argument specify converted resource value dont cache converted value cache converted value cache converted value per display basi caching converted value require server good idea instance string pixel conversion argument routine invoked resource destroyed either reference count ha zero widget owning value destroyed ha following type definition void cardinal context arg cardinal invoked free storage associated argument actually free storage pointed argument passed extra argument passed converter conversion wa performed instance colormap visual argument string pixel converter since would need free allocated pixel colormap well private datum passed converter wa registered sample converter code found following file mit r5 distribution 18 open multiple display see multiuser application software using xt x resource issue 3 summer 1992 oliver jone complete coverage issue involved thi answer based article one use add display single application context display remove application context real problem occur trying close display thi happen 3 way 1 user select quit button one display 2 user ha window manager send message 3 server possibly message server network failure ill assume deal 1 2 since merely problem widget display removing display read oliver jone article third one difficult handle following based oliver jone article include difficult problem difficulty arise xlib design io error alway fatal thi essentially true single display x based application true multiple display program application thing display information x server x io error occur io error handler called return exit happen way around thi use avoid returning io error handler following code fragment demonstrate thi include void display 1 main 0 something given display pointer go back application specific datum perform necessary also call first called return 0 save enough information latter execution return program state wa executed return value thi second value second argument several using thi purpose adequate problem might run resource converter cache resource likely symptom xlib error may problem total number display open since typically limited number file available 32 typical value may also run authorization problem trying connect display wa much discussion compwindowsx thi topic november 91 robert posted article basically said thi way xlib change 19 changed r3 r4 r5 thi address change intrinsic first general change release described certainly incomplete list new function added listed primary goal much following information chapter 13 mit xt intrinsic manual oreilly volume 5 3rd edition r3 r4 addition gadget widget new resource type converter interface handle additional datum variable argument list interface define 4 added thi release changed added count parameter event handler parameter added specification changed changed datum type changed datum type added extension record obsolete info passed added extension record obsolete info passed calling must store complete geometry added actually work r4 r4 r5 resource added searching appdefault file made flexible resource added resource database support permanently allocated string allocated string required several clas field arg argument changed cardinal int many performance improvement thi article xt performance improvement release 5 x resource issue 3 avoid string copy several field clas record indicated needing permanent string using array string resource callback list use le memory translation manager take le memory translation table faster cache action binding keycode better sharing gc field window widget translation use le space faster space widget name since available widget space allocated include constraint several example program 26 reduction memory usage function new r5 gc field get action table clas return resource database screen register language procedure called set function new r4 procedure call every action lot work cache reference count converter specify default resource register new style converter directly execute callback list invoke new style converter release resource value release list resource value find call resource converter invoke converter return display issue warning conversion find file retrieve modify thi action return name clas get constraint widget return mapping table read time retrieve event obtain selection value obtain selection value widget clas manually register event handler register event handler without modify input mask test object test return list keycode retrieve recent event time action widget action widget macro structure offset make selection datum map popup indicate action procedure need passive grab remove function called every action find file return screen object set time set custom colormap passive button grab passive key grab release active keyboard grab release active pointer grab interface bunch function return window nearest widget ancestor replacement r3 r3 r3 r3 r3 r4 r3 r3 r3 r3 r3 r3 r3 r3 r4 r4 r3 r3 r3 r3 r3 r3 r3 r3 r3 r3 20 resource loaded resource widget filled following place highest priority lowest priority 1 arg passed creation time 2 command line argument 3 user per host default file 4 user default file 5 user per application default file 6 system wide per application default file note 26 read application startup result step 36 single resource database used query per host default file contain application specific computer thi file either specified environment variable set file used user default file either obtained property root window display set file used typically program used set property please note thi kept relatively small client connect display must transfer property size around reasonable toolkit may track change user may many per application default file containing specific application intrinsic quite flexible thi file found read next part describe variou environment variable effect thi file found system wide per application default file typically found file found resource used intrinsic quite flexible thi file found read next part describe variou environment variable effect thi file found thank oliver jone following use several environment variable control resource loaded ymy program environment variable control xt look file application xt load one appdefault file path defined another path defined set software installed ymy system way appdefault file appear several different directory hierarchy suppose example running sun open window also r4 x application installed could set value like thi would cause xt look appdefault file wherever ymy located value thi environment variable list contain replacement character follow see n value filename parameter application clas name value file type thi case literal string appdefault c resource r5 none appdefault l language eg l language part l eg territory part display language string c part display language string let take apart example suppose application clas name also suppose open window installed notice example mean mean application xt try open appdefault file order shown soon find one read use stop looking effect thi path search first let consider another example thi time let set look file current working directory directory appdefault first path list expand second expand thi convenient setting follow imake convention appdefault file application source directory run application directory working still resource loaded properly note looking appdefault file bizarre reason neither type file defined useles r5 another twist may specify resource value example might run application like thi color one ymy specification value expanded would c substitution character take value resource default compiled xt r5 r5 r5 note site replace thi batch default setting default also compiled xt r5 r5 r5 root either value user home directory set set value default xt ignore altogether notice quick dirty way making ymy application find ymy appdefault file ymy current working directory set single dot r3 thi worked differently r3 many person set value dot followed slash 21 order callback executed courtesy intrinsic library guarantee order thi widget writer application writer ability modify entire content callback list neither one currently know intrinsic guarantee order execution application programmer rely widget writer widget writer required document widget add remove callback list effect thi therefore functionality contained callback independent functionality contained callback list even though xt standard definition say specify callback list procedure may infer word callback routine called order added callback list 22 know widget visible courtesy building widget need know visible set visible interest field core window completely core visible flag go false however window flag stay set true right everything implemented correctly thi demonstrate deficiency x protocol core widget capability protocol deficiency information available one way thi case way xt specification accurate second third paragraph section read thi section carefully visible field change response event received window go widget ancestor occur thi protocol deficiency state state specific meaning x protocol see ymy xlib x protocol reference manual thi problem mwm something else need done youll see thi window manager window manager problem mwm fastest way determine window application writer keep track global action routine translation shell widget contain ymy custom widget custom widget writer see field returned call suggestion 23 widget xt ie cant 24 use etc unfortunately code call tend ignore possibility returning null best handled something like ptr type type ptr exit 1 handle thi common case intrinsic define function use standard c language function execute null value returned xt error handler supposed return thi effectively exit addition called null pointer use get initial space thi allows code like ptr ptr type type else ptr type ptr type count 1 count written ptr ptr ptr count also accept null pointer argument generally ive found xt function use however anytime im anything potentially large use standard function fully recover enough memory error macro structure copying string abc char ptr char abc take care type ptr strict interpretation intrinsic reference manual allow implementation provide function free ie code char ptr ptr 100 free ptr may work personally id call implementation thi broken complain vendor common error motif programmer use string really using 25 debug xt application first id getting pure software thi great package tracing memory problem sun bit id still excuse marketing blurb contact info insert additional checking instruction directly object code produced existing compiler instruction check every memory read write performed program test detect several type acces error reading memory writing past bound writing memory insert checking logic code program including third party vendor library verify system call interface addition track memory usage identify individual memory leak using novel garbage collection technique nearly comprehensive memory acces checking slow target program typically factor two five alternative package isnt sun run many unix ha pretty similar feature environment thi replace several c library function add additional check contact info next getting sort xlib error youll need run synchronou mode easily accomplished sync command line argument setting variable 1 ymy debugger set break point exit thi let trace back original xlib function called dont run synchronou mode actual error may occured number call xlib previously since xlib call reply server asynchronou next trouble window layout use resource clas resource cause widget name identified window example example example tree click new window give normal information widget name clas window included thi help checking location size widget next trouble geometry manager want test way widget manage child try thi act filter child geometry manager check behavimy clever idea unfortunate problem callback application grab keyboard mouse menu server effectively lock youll need go another machine kill debugger manually server lock application ha said one else acces keyboard application stopped waiting debugger waiting ymy command unfortunately cant give input going ymy application stopped best way debug thi kind problem two machine ymy desk running program debugger environment one machine running application possibly using command sequence like thi display application ymy favorite debugger thi application set environment display run believe c debugger ha method dealing thi calling xlib function release grab widget problem require pretty good skill knowledge widget work go long way without knowing internal particular widget far without understanding widget work use adding print statement debugger help great deal 26 dont work got problem three routine problem use application seem properly made handy little everything work perfect real application nothing happen introduction r3 function routine see change r3 r4 r5 happen use default application context different one may created since event timeout distributed per application context basi using two application context wont get event example 0 toplevel clas argv arg app would never invoke timeout 27 implement drag drop courtesy roger reynold 19 feb 93 moving datum client fashion motif version 12 support capability openlook ha supported along two protocol far know published wrote package called designed flexible public protocol drag n drop operation client intention wa provide tool would make easy person support standard protocol program develop contribute sell regardles widget set used long based xt implementation based upon understanding convention detail read code heard dozen person using like feel work whole lot better motif 12 stuff also seem many think neat use motif anyway latest stuff available ftp possibly older version also available exportlcsmitedu contrib pete ci dept ohio state university w 614 hall neil ave h 614 columbu oh
