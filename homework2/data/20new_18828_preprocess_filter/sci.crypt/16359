greg rose subject authentication wa advanced one time pad article bryan olson g write ideal security ha wellknown flaw authentication suppose use random bit stream pad encryption operation know plaintext message change message work alouse sending bob plaintext p key stream alouse compute ciphertext c xor p send bob eve know p want message appear p eve intercept c compute c c xor p xor p xor p eve send c bob bob decrypt c computing p thu receiving false message wa eve firstly aside agree weaknes exist lot trouble believing represent difficulty real life given 1 purpose pad give unbreakable security expense key distribution etc imply client really want level security 2 person want keep p secret find hard believe eve might happen copy p lying around aware argument apply eve knowing even small part message eve must know exactly byte c known start result find thi least surprising back question resource use transmission would also message authentication code message using next bit key perhap ymy original question basically asked whether wa way message degree security pad provided dont know answer however would propose following discussion alouse bob arbitrary number secret random bit share eve doesnt know find effectively knowing p corresponding c fact correspond cause problem message authentication code wa created using operation eve could know part mac affected part input would unable mac correspond required part message simply whatever doesnt exactly effect end encrypted message c alouse mac follow s2 mean next full chunk one time pad 1 compute p xor s2 pad boundary 2 break chunk 3 set mac 0 vector 4 chunk set mac mac end thi proces mac message authentication code bob verify mac obviou manner recover plaintext p use hi pad reproduce mac manner operator rub simplest operator think fixed even published integer table called use x x xor practically speaking think thi ymy problem eve never see intermediate output hence cant s2 perform valid substitution also practically speaking want mac fairly large say 32 bit might want 4 say might work 4 think irrelevant detail discussion hand first point error give pointer literature greg rose australian computing communication institute 61 18 use standard phrase may
